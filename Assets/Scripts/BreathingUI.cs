using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class BreathingUI : MonoBehaviour
{
    [SerializeField] private BreathingManager breathingManager;
    [SerializeField] private Text breathText;

   void Start()
{
    if (BreathingManager.Instance != null)
    {
        BreathingManager.Instance.onBreathChanged.AddListener(UpdateBreathUI);
        Debug.Log("üéØ UI –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ BreathingManager");
    }
    else
    {
        Debug.LogWarning("‚ùå BreathingManager.Instance –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
}

   private IEnumerator WaitForCapybara()
{
    yield return new WaitForSeconds(0.2f); // –∂–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞–ø–∏–±–∞—Ä—ã

    breathingManager = FindObjectOfType<BreathingManager>();

    if (breathingManager != null)
    {
        breathingManager.onBreathChanged.AddListener(UpdateBreathUI);
        Debug.Log("üéØ –ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –¥—ã—Ö–∞–Ω–∏–µ UI (–∏–∑ –∫–æ—Ä—É—Ç–∏–Ω—ã)");
    }
    else
    {
        Debug.LogWarning("‚ùå BreathingManager –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è");
    }
}

    private void UpdateBreathUI(float value)
{
   

    if (breathText != null)
    {
        breathText.text = "–î—ã—Ö–∞–Ω–∏–µ: " + Mathf.RoundToInt(value) + "%";
    }
    else
    {
        Debug.LogWarning("‚ùå breathText –≤—Å—ë –∂–µ NULL!");
    }
}
}